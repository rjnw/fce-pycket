[1671577e3f36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B00000004883E2FE488B842498000000488942384889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[1671577f6cd7] jit-backend-dump}
[1671577f9e5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1860b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C25C8CEAA0048C70425C0CEAA000000000048C70425C8CEAA000000000048895D388F45208F4510488B9424B00000004883E2FE488B842498000000488942384889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[1671577fd478] jit-backend-dump}
[1671577ff545] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186170 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB30E9660041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[1671578015be] jit-backend-dump}
[167157802e21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1861e0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBA0F9670041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[167157805020] jit-backend-dump}
[167157807174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186260 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C25C8CEAA004C8B2425C0CEAA0048C70425C0CEAA000000000048C70425C8CEAA000000000041BB30E9660041FFD3F20F10442410488B44240848891C25C8CEAA004C892425C0CEAA00488B5C24284C8B642430488D642438C3
[167157809523] jit-backend-dump}
[16715780c700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1862f
[167157812b2f] jit-backend-dump}
[167157814b00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc
[167157818499] jit-backend-dump}
[167157819ff0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc
[167157832335] jit-backend-dump}
[1671578349f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc
[167157838de5] jit-backend-dump}
[16715783b07d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1868e
[16715783f6b5] jit-backend-dump}
[16715784135f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186a60 +0  488B0425C8CEAA0048C70425C0CEAA000000000048C70425C8CEAA00000000004889453848C74510E0919B00488B9424B00000004883E2FE488B842498000000488942384889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[1671578435dc] jit-backend-dump}
[16715784963c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186ae
[16715784fa50] jit-backend-dump}
[1671578522b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186cd
[16715785f56f] jit-backend-dump}
[167157863154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc186ed
[167157869049] jit-backend-dump}
[16715786b026] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1870c
[167157870801] jit-backend-dump}
[167157872b98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1872b0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC0848C7452810000000FFD0F6450401740D49BB606218CCD47F000041FFD34883C40848C745280000000048C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C3
[16715787609f] jit-backend-dump}
[1671578775a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187370 +0  4C8985800000004C898D880000004C8995900000004883EC0848C7452810000000FFD0F6450401740D49BB606218CCD47F000041FFD34883C40848C745280000000048C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C3
[167157879561] jit-backend-dump}
[16715787b07f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1873f0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC0848C7452810000000FFD0F6450401740D49BB606218CCD47F000041FFD34883C40848C745280000000048C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C3
[1671578853de] jit-backend-dump}
[1671578876d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1875b
[16715788bd56] jit-backend-dump}
[16715788d53b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187730 +0  4889E74883EC0841BB6049680041FFD34883C408488B0425C0CEAA004885C07501C34883C40849BB606A18CCD47F000041FFE3
[16715788eba3] jit-backend-dump}
[167157a37523] {jit-backend
[167157b06772] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187960 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B5E384C89184889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B0425E09FA6004829E0483B0425E89FA600760D49BB307718CCD47F000041FFD348FF042510F167029048FF042530F16702488B8D400100008139180100000F8500000000488B4118488B5108488B5910488B71208138581700000F8500000000488B78184C0FB647104D85C00F85000000004C8B0568FEFFFF4C39C70F85000000004C8B0568FEFFFF4C39C20F8500000000488B5308488B7A08488B5708488B7A10488B9780000000813A282700000F8500000000488B5310488B5A104C8B4B084D85C90F85000000004C8B4828490FB641104885C00F8500000000488B0536FEFFFF4939C10F8500000000488B47508138182500000F8500000000488B4218488B5008488D4201813ED80A00000F8500000000488B4E18488B56084889D34989CC488B0C25F0B69600488D5110483B142510B79600761B49BB807818CCD47F00004C895D2049BBE06A18CCD47F000041FFD348891425F0B6960048C701880300004889410841F64424048174237811415449BBE06118CCD47F000041FFD379104989DB49C1EB074983F3F84D0FAB1C2449894CDC10488B4E108139C80900000F8500000000488B7108488B5E18488B7318488B5910488B4120488B5118480FB67E104885FF0F8400000000488B3D76FDFFFF4839FE0F85000000004C39C30F85000000000F1F400048FF042550F167024C8B4008498B58084C8B4310498B9880000000813B282700000F8500000000498B4C2410488B79084885FF0F8500000000498B7850813F182500000F8500000000498B7C24184C8B4708498D7801813AD80A00000F8500000000488B42184C8B62084889D3488B0C25F0B69600488D5110483B142510B79600761B49BB107918CCD47F00004C895D2049BBE06A18CCD47F000041FFD348891425F0B6960048C7018803000048897908F6400481742178105049BBE06118CCD47F000041FFD3790F4D89E349C1EB074983F3F84C0FAB184A894CE010488B4B108139C80900000F8500000000488B59084C8B6318498B5C24184C8B6110488B7920488B51184C0FB643104D85C00F84000000004C8B0545FCFFFF4C39C30F85000000004C8B05DDFBFFFF4D39C40F85000000004989C44889F8E9C1FEFFFF90FF359AFBFFFF49BBD07718CCD47F0000415349BB006018CCD47F000041FFE3FF3583FBFFFF49BBE07718CCD47F0000415349BB006018CCD47F000041FFE3FF356CFBFFFF49BBF07718CCD47F0000415349BB006018CCD47F000041FFE3FF355DFBFFFF49BB007818CCD47F0000415349BB006018CCD47F000041FFE3FF354EFBFFFF49BB107818CCD47F0000415349BB006018CCD47F000041FFE3FF3537FBFFFF49BB207818CCD47F0000415349BB006018CCD47F000041FFE3FF3520FBFFFF49BB307818CCD47F0000415349BB006018CCD47F000041FFE3FF3509FBFFFF49BB407818CCD47F0000415349BB006018CCD47F000041FFE3FF35FAFAFFFF49BB507818CCD47F0000415349BB006018CCD47F000041FFE3FF35E3FAFFFF49BB607818CCD47F0000415349BB006018CCD47F000041FFE3FF35CCFAFFFF49BB707818CCD47F0000415349BB006018CCD47F000041FFE3FF35B5FAFFFF49BB907818CCD47F0000415349BB006018CCD47F000041FFE3FF359EFAFFFF49BBA07818CCD47F0000415349BB006018CCD47F000041FFE3FF358FFAFFFF49BBB07818CCD47F0000415349BB006018CCD47F000041FFE3FF3578FAFFFF49BBC07818CCD47F0000415349BB006018CCD47F000041FFE3FF3561FAFFFF49BBD07818CCD47F0000415349BB006018CCD47F000041FFE3FF354AFAFFFF49BBE07818CCD47F0000415349BB006018CCD47F000041FFE3FF3533FAFFFF49BBF07818CCD47F0000415349BB006018CCD47F000041FFE3FF351CFAFFFF49BB007918CCD47F0000415349BB006018CCD47F000041FFE3FF3505FAFFFF49BB207918CCD47F0000415349BB006018CCD47F000041FFE3FF35EEF9FFFF49BB307918CCD47F0000415349BB006018CCD47F000041FFE3FF35D7F9FFFF49BB407918CCD47F0000415349BB006018CCD47F000041FFE3FF35C0F9FFFF49BB507918CCD47F0000415349BB006018CCD47F000041FFE3
[167157b2feb7] jit-backend-dump}
[167157b33c1c] {jit-backend-addr
Loop 1 ((if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))) has address 0x7fd4cc187ab7 to 0x7fd4cc187dc0 (bootstrap 0x7fd4cc187a40)
       gc table: 0x7fd4cc187960
       function: 0x7fd4cc187a40
         resops: 0x7fd4cc187ab7
       failures: 0x7fd4cc187dc0
            end: 0x7fd4cc188089
[167157b37345] jit-backend-addr}
[167157b38872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187ad7 +0  E5020000
[167157b39ca6] jit-backend-dump}
[167157b3a3e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187af3 +0  E8020000
[167157b3b16a] jit-backend-dump}
[167157b3b884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b05 +0  F5020000
[167157b3c394] jit-backend-dump}
[167157b3ca5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b15 +0  04030000
[167157b3d7e0] jit-backend-dump}
[167157b3df3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b25 +0  13030000
[167157b3eb36] jit-backend-dump}
[167157b7d6da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b48 +0  0F030000
[167157b7f801] jit-backend-dump}
[167157b8015b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b5d +0  19030000
[167157b80da6] jit-backend-dump}
[167157b8154a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b6f +0  26030000
[167157b820ed] jit-backend-dump}
[167157b82837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b7f +0  35030000
[167157b83476] jit-backend-dump}
[167157b83dd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b8f +0  44030000
[167157b84ae1] jit-backend-dump}
[167157b85219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187ba7 +0  4B030000
[167157b85e49] jit-backend-dump}
[167157b865d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187c39 +0  D8020000
[167157b86ffb] jit-backend-dump}
[167157b876a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187c5f +0  D1020000
[167157b8809c] jit-backend-dump}
[167157b88ab0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187c6f +0  E0020000
[167157b89530] jit-backend-dump}
[167157b89c05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187c78 +0  F6020000
[167157b8a6f4] jit-backend-dump}
[167157b8ae1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187ca3 +0  EA020000
[167157b8b9de] jit-backend-dump}
[167157b8c152] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187cb5 +0  F7020000
[167157b8ce6f] jit-backend-dump}
[167157b8d601] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187cc5 +0  06030000
[167157b96b08] jit-backend-dump}
[167157b97564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187cde +0  0C030000
[167157b980e9] jit-backend-dump}
[167157b9882a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187d69 +0  A0020000
[167157b992d7] jit-backend-dump}
[167157b999be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187d90 +0  98020000
[167157b9a288] jit-backend-dump}
[167157b9a9f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187da0 +0  A7020000
[167157b9b758] jit-backend-dump}
[167157b9be90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187db0 +0  B6020000
[167157b9ca15] jit-backend-dump}
[167157b9e281] jit-backend}
[167157b9f48d] {jit-log-opt-loop
# Loop 1 ((if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))) : loop with 92 ops
[p0, p1, p2]
+351: label(p0, p1, p2, descr=TargetToken(140551935057952))
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+360: guard_class(p2, 9886296, descr=<Guard0x7fd4cc29a020>) [p2]
+379: p4 = getfield_gc_r(p2, descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+383: p5 = getfield_gc_r(p2, descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+387: p6 = getfield_gc_r(p2, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+391: p7 = getfield_gc_r(p2, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+395: guard_class(p4, 9891992, descr=<Guard0x7fd4cc29c020>) [p2]
+407: p9 = getfield_gc_r(p4, descr=<FieldP prim.IfAST.inst_ch 24 pure>)
+411: i10 = getfield_gc_i(p9, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+416: guard_false(i10, descr=<Guard0x7fd4cc29c060>) [p2]
+432: guard_value(p9, ConstPtr(ptr11), descr=<Guard0x7fd4cc29c0a0>) [p2]
+448: guard_value(p5, ConstPtr(ptr12), descr=<Guard0x7fd4cc29c0e0>) [p2]
debug_merge_point(0, 0, '(zero? m)')
+457: p13 = getfield_gc_r(p6, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+461: p14 = getfield_gc_r(p13, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+465: p15 = getfield_gc_r(p14, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+469: p16 = getfield_gc_r(p15, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+473: p18 = getarrayitem_gc_pure_r(p16, 14, descr=<ArrayP 8>)
+480: guard_class(p18, 9896040, descr=<Guard0x7fd4cc29c120>) [p2]
+492: p20 = getfield_gc_r(p6, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+496: p22 = getarrayitem_gc_pure_r(p20, 0, descr=<ArrayP 8>)
+500: i23 = getfield_gc_i(p22, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+504: i24 = int_is_zero(i23)
+507: guard_true(i24, descr=<Guard0x7fd4cc29c160>) [p2]
+513: p25 = getfield_gc_r(p4, descr=<FieldP prim.IfAST.inst_th 40 pure>)
+517: i26 = getfield_gc_i(p25, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+522: guard_false(i26, descr=<Guard0x7fd4cc29c1a0>) [p2]
+538: guard_value(p25, ConstPtr(ptr27), descr=<Guard0x7fd4cc29c1e0>) [p2]
debug_merge_point(0, 0, '(+ n 1)')
+547: p29 = getarrayitem_gc_pure_r(p16, 8, descr=<ArrayP 8>)
+551: guard_class(p29, 9895512, descr=<Guard0x7fd4cc29c220>) [p2]
+563: p32 = getarrayitem_gc_pure_r(p20, 1, descr=<ArrayP 8>)
+567: i33 = getfield_gc_i(p32, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+571: i35 = int_add(i33, 1)
+575: guard_class(p7, 9888792, descr=<Guard0x7fd4cc29c260>) [p2]
+587: p37 = getfield_gc_r(p7, descr=<FieldP prim._prim_n_end.inst_value_array 24>)
+591: i38 = getfield_gc_i(p7, descr=<FieldS prim._prim_n_end.inst_current_index 8 pure>)
+595: p39 = new_with_vtable(descr=<SizeDescr 16>)
+665: setfield_gc(p39, i35, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+712: setarrayitem_gc(p37, i38, p39, descr=<ArrayP 8>)
+717: p40 = getfield_gc_r(p7, descr=<FieldP prim._prim_n_end.inst_k 16 pure>)
+721: guard_class(p40, 9888520, descr=<Guard0x7fd4cc29a080>) [p40, p37]
+733: p42 = getfield_gc_r(p40, descr=<FieldP prim.closure_k.inst_closure 8 pure>)
+737: p43 = getfield_gc_r(p42, descr=<FieldP prim.Closure.inst_lambda_ast 24 pure>)
+741: p44 = getfield_gc_r(p43, descr=<FieldP prim.LambdaAST.inst_body 24 pure>)
+745: p45 = getfield_gc_r(p40, descr=<FieldP prim.closure_k.inst_env_s 16 pure>)
+749: p46 = getfield_gc_r(p40, descr=<FieldP prim.closure_k.inst_prev_env_v 32 pure>)
+753: p47 = getfield_gc_r(p40, descr=<FieldP prim.closure_k.inst_k 24 pure>)
+757: i48 = getfield_gc_i(p44, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+762: guard_true(i48, descr=<Guard0x7fd4cc29c2a0>) [p40, p37]
+778: guard_value(p44, ConstPtr(ptr49), descr=<Guard0x7fd4cc29c2e0>) [p40, p37]
+787: guard_value(p45, ConstPtr(ptr50), descr=<Guard0x7fd4cc29c320>) [p40, p37]
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+796: label(p46, p37, p47, descr=TargetToken(140551935058032))
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
debug_merge_point(0, 0, '(zero? m)')
+808: p51 = getfield_gc_r(p46, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+812: p52 = getfield_gc_r(p51, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+816: p53 = getfield_gc_r(p52, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+820: p55 = getarrayitem_gc_pure_r(p53, 14, descr=<ArrayP 8>)
+827: guard_class(p55, 9896040, descr=<Guard0x7fd4cc29a0e0>) [p55, p37, p46, p47]
+839: p58 = getarrayitem_gc_pure_r(p37, 0, descr=<ArrayP 8>)
+844: i59 = getfield_gc_i(p58, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+848: i60 = int_is_zero(i59)
+851: guard_true(i60, descr=<Guard0x7fd4cc29c360>) [p55, p37, p46, p47]
debug_merge_point(0, 0, '(+ n 1)')
+857: p62 = getarrayitem_gc_pure_r(p53, 8, descr=<ArrayP 8>)
+861: guard_class(p62, 9895512, descr=<Guard0x7fd4cc29c3a0>) [p55, p37, p46, p47]
+873: p65 = getarrayitem_gc_pure_r(p37, 1, descr=<ArrayP 8>)
+878: i66 = getfield_gc_i(p65, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+882: i68 = int_add(i66, 1)
+886: guard_class(p47, 9888792, descr=<Guard0x7fd4cc29c3e0>) [p55, p37, p46, p47]
+898: p70 = getfield_gc_r(p47, descr=<FieldP prim._prim_n_end.inst_value_array 24>)
+902: i71 = getfield_gc_i(p47, descr=<FieldS prim._prim_n_end.inst_current_index 8 pure>)
+906: p72 = new_with_vtable(descr=<SizeDescr 16>)
+973: setfield_gc(p72, i68, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+1016: setarrayitem_gc(p70, i71, p72, descr=<ArrayP 8>)
+1021: p73 = getfield_gc_r(p47, descr=<FieldP prim._prim_n_end.inst_k 16 pure>)
+1025: guard_class(p73, 9888520, descr=<Guard0x7fd4cc29a140>) [p73, p70]
+1037: p75 = getfield_gc_r(p73, descr=<FieldP prim.closure_k.inst_closure 8 pure>)
+1041: p76 = getfield_gc_r(p75, descr=<FieldP prim.Closure.inst_lambda_ast 24 pure>)
+1045: p77 = getfield_gc_r(p76, descr=<FieldP prim.LambdaAST.inst_body 24 pure>)
+1050: p78 = getfield_gc_r(p73, descr=<FieldP prim.closure_k.inst_env_s 16 pure>)
+1054: p79 = getfield_gc_r(p73, descr=<FieldP prim.closure_k.inst_prev_env_v 32 pure>)
+1058: p80 = getfield_gc_r(p73, descr=<FieldP prim.closure_k.inst_k 24 pure>)
+1062: i81 = getfield_gc_i(p77, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+1067: guard_true(i81, descr=<Guard0x7fd4cc29c420>) [p73, p70]
+1083: guard_value(p77, ConstPtr(ptr82), descr=<Guard0x7fd4cc29c460>) [p73, p70]
+1099: guard_value(p78, ConstPtr(ptr83), descr=<Guard0x7fd4cc29c4a0>) [p73, p70]
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+1108: jump(p79, p70, p80, descr=TargetToken(140551935058032))
+1120: --end of the loop--
[167157c50d5a] jit-log-opt-loop}
[167157f014a0] {jit-backend
[167157fae804] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1881d
[16715822c376] jit-backend-dump}
[1671582305ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188294 +0  1F000000
[1671582322f5] jit-backend-dump}
[167158232d27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc18829f +0  1F000000
[167158233c24] jit-backend-dump}
[16715823449a] {jit-backend-addr
bridge out of Guard 0x7fd4cc29c160 has address 0x7fd4cc188290 to 0x7fd4cc188540
       gc table: 0x7fd4cc1881d0
    jump target: 0x7fd4cc188290
         resops: 0x7fd4cc1882be
       failures: 0x7fd4cc188540
            end: 0x7fd4cc18874f
[167158237719] jit-backend-addr}
[167158238cd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1882ce +0  6E020000
[167158239ae9] jit-backend-dump}
[16715823a4f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1882eb +0  70020000
[16715823b070] jit-backend-dump}
[16715823b84a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1882fd +0  7D020000
[16715823c378] jit-backend-dump}
[16715823cd2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc18830d +0  8C020000
[16715823d887] jit-backend-dump}
[16715823df38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc18831d +0  9B020000
[16715823ea5d] jit-backend-dump}
[16715823f054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188341 +0  96020000
[16715823fbd0] jit-backend-dump}
[167158240452] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188356 +0  A0020000
[167158240ef9] jit-backend-dump}
[16715824184d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188368 +0  AD020000
[16715824fc62] jit-backend-dump}
[167158250769] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188378 +0  BC020000
[16715825126a] jit-backend-dump}
[16715825198d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188389 +0  CA020000
[1671582523a4] jit-backend-dump}
[167158252bf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc18839d +0  D5020000
[167158253be9] jit-backend-dump}
[167158256538] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1883b9 +0  D8020000
[167158257084] jit-backend-dump}
[167158257822] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1883c9 +0  E7020000
[16715825822d] jit-backend-dump}
[1671582587df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1883d6 +0  F9020000
[167158259382] jit-backend-dump}
[167158259b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1883e6 +0  08030000
[16715825a4dd] jit-backend-dump}
[16715825ab6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188400 +0  0D030000
[16715825b977] jit-backend-dump}
[16715825c727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188410 +0  1C030000
[16715825d27f] jit-backend-dump}
[16715825dfd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187b5d +0  2F070000
[16715825eaaf] jit-backend-dump}
[167158261356] jit-backend}
[167158262640] {jit-log-opt-bridge
# bridge out of Guard 0x7fd4cc29c160 with 85 ops
[p0]
+246: guard_class(p0, 9886296, descr=<Guard0x7fd4cc29a200>) [p0]
+258: p2 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+262: p3 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+266: p4 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+270: p5 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+274: guard_class(p2, 9891992, descr=<Guard0x7fd4cc29c520>) [p0]
+287: p7 = getfield_gc_r(p2, descr=<FieldP prim.IfAST.inst_ch 24 pure>)
+291: i8 = getfield_gc_i(p7, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+296: guard_false(i8, descr=<Guard0x7fd4cc29c560>) [p0]
+312: guard_value(p7, ConstPtr(ptr9), descr=<Guard0x7fd4cc29c5a0>) [p0]
+328: guard_value(p3, ConstPtr(ptr10), descr=<Guard0x7fd4cc29c5e0>) [p0]
debug_merge_point(0, 0, '(zero? m)')
+337: p11 = getfield_gc_r(p4, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+341: p12 = getfield_gc_r(p11, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+345: p13 = getfield_gc_r(p12, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+349: p14 = getfield_gc_r(p13, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+353: p16 = getarrayitem_gc_pure_r(p14, 14, descr=<ArrayP 8>)
+360: guard_class(p16, 9896040, descr=<Guard0x7fd4cc29c620>) [p0]
+373: p18 = getfield_gc_r(p4, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+377: p20 = getarrayitem_gc_pure_r(p18, 0, descr=<ArrayP 8>)
+381: i21 = getfield_gc_i(p20, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+385: i22 = int_is_zero(i21)
+388: guard_false(i22, descr=<Guard0x7fd4cc29c660>) [p0]
+394: p23 = getfield_gc_r(p2, descr=<FieldP prim.IfAST.inst_el 32 pure>)
+398: i24 = getfield_gc_i(p23, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+403: guard_false(i24, descr=<Guard0x7fd4cc29c6a0>) [p0]
+419: guard_value(p23, ConstPtr(ptr25), descr=<Guard0x7fd4cc29c6e0>) [p0]
debug_merge_point(0, 0, '(if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1))))')
debug_merge_point(0, 0, '(zero? n)')
+428: p27 = getarrayitem_gc_pure_r(p18, 1, descr=<ArrayP 8>)
+432: i28 = getfield_gc_i(p27, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+436: i29 = int_is_zero(i28)
+439: guard_false(i29, descr=<Guard0x7fd4cc29c720>) [p0]
debug_merge_point(0, 0, '(ack (- m 1) (ack m (- n 1)))')
+445: p30 = getfield_gc_r(p11, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+449: p32 = getarrayitem_gc_pure_r(p30, 0, descr=<ArrayP 8>)
+453: guard_class(p32, ConstClass(Closure), descr=<Guard0x7fd4cc29c760>) [p0]
+465: p34 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_lambda_ast 24 pure>)
+469: p35 = getfield_gc_r(p34, descr=<FieldP prim.LambdaAST.inst_top_env_s 32 pure>)
+473: p36 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_env_s 8 pure>)
+484: guard_value(p35, ConstPtr(ptr37), descr=<Guard0x7fd4cc29c7a0>) [p0]
+500: guard_value(p36, ConstPtr(ptr38), descr=<Guard0x7fd4cc29c7e0>) [p0]
+509: p39 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_env_v 16 pure>)
+513: i40 = instance_ptr_eq(p11, p39)
+516: guard_true(i40, descr=<Guard0x7fd4cc29c820>) [p0]
debug_merge_point(0, 0, '(- m 1)')
+522: p42 = getarrayitem_gc_pure_r(p14, 9, descr=<ArrayP 8>)
+526: guard_class(p42, 9895600, descr=<Guard0x7fd4cc29c860>) [p0]
+538: i45 = int_sub(i21, 1)
debug_merge_point(0, 0, '(ack m (- n 1))')
debug_merge_point(0, 0, '(- n 1)')
+542: i47 = int_sub(i28, 1)
+546: p48 = getfield_gc_r(p34, descr=<FieldP prim.LambdaAST.inst_body 24 pure>)
+550: i49 = getfield_gc_i(p48, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+555: guard_true(i49, descr=<Guard0x7fd4cc29c8a0>) [p0]
+571: guard_value(p48, ConstPtr(ptr50), descr=<Guard0x7fd4cc29c8e0>) [p0]
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+580: p51 = new_with_vtable(descr=<SizeDescr 24>)
+647: p53 = new_array_clear(2, descr=<ArrayP 8>)
+666: setarrayitem_gc(p53, 0, p20, descr=<ArrayP 8>)
+670: p55 = new_with_vtable(descr=<SizeDescr 16>)
+682: setfield_gc(p55, i47, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+686: setarrayitem_gc(p53, 1, p55, descr=<ArrayP 8>)
+690: p57 = new_with_vtable(descr=<SizeDescr 32>)
+701: p58 = new_with_vtable(descr=<SizeDescr 48>)
+713: setfield_gc(p58, p32, descr=<FieldP prim.closure_k.inst_closure 8 pure>)
+717: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP prim.closure_k.inst_env_s 16 pure>)
+721: setfield_gc(p58, p5, descr=<FieldP prim.closure_k.inst_k 24 pure>)
+725: setfield_gc(p58, p11, descr=<FieldP prim.closure_k.inst_prev_env_v 32 pure>)
+729: setfield_gc(p58, 0, descr=<FieldU prim.closure_k.inst_plug_loop 40>)
+734: p62 = new_array_clear(2, descr=<ArrayP 8>)
+764: p63 = new_with_vtable(descr=<SizeDescr 16>)
+776: setfield_gc(p63, i45, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+780: setarrayitem_gc(p62, 0, p63, descr=<ArrayP 8>)
+785: p65 = new_with_vtable(descr=<SizeDescr 40>)
+796: setfield_gc(p65, ConstPtr(ptr50), descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+800: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+804: setfield_gc(p65, p51, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+808: setfield_gc(p65, p57, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+812: setfield_gc(p51, p11, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+816: setfield_gc(p51, p53, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+820: setfield_gc(p57, 1, descr=<FieldS prim._prim_n_end.inst_current_index 8 pure>)
+828: setfield_gc(p57, p58, descr=<FieldP prim._prim_n_end.inst_k 16 pure>)
+832: setfield_gc(p57, p62, descr=<FieldP prim._prim_n_end.inst_value_array 24>)
+836: jump(p51, p57, p65, descr=TargetToken(140551935057952))
+880: --end of the loop--
[1671582dc3e9] jit-log-opt-bridge}
[167159e55da5] {jit-backend
[167159fc1a38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc
[16715a015807] jit-backend-dump}
[16715a01c254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1888b4 +0  1F000000
[16715a01e4b6] jit-backend-dump}
[16715a01ec90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1888bf +0  1F000000
[16715a0203fd] jit-backend-dump}
[16715a020d96] {jit-backend-addr
bridge out of Guard 0x7fd4cc29c360 has address 0x7fd4cc1888b0 to 0x7fd4cc188af0
       gc table: 0x7fd4cc188830
    jump target: 0x7fd4cc1888b0
         resops: 0x7fd4cc1888de
       failures: 0x7fd4cc188af0
            end: 0x7fd4cc188c45
[16715a024c15] jit-backend-addr}
[16715a025908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1888ee +0  FE010000
[16715a026484] jit-backend-dump}
[16715a026ded] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188900 +0  0B020000
[16715a02798a] jit-backend-dump}
[16715a02904c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188920 +0  0A020000
[16715a029970] jit-backend-dump}
[16715a029eb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188932 +0  17020000
[16715a02a744] jit-backend-dump}
[16715a02af2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188947 +0  21020000
[16715a02bad9] jit-backend-dump}
[16715a02c544] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188963 +0  24020000
[16715a02d26a] jit-backend-dump}
[16715a02e155] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188973 +0  33020000
[16715a02ede8] jit-backend-dump}
[16715a02f7f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188980 +0  45020000
[16715a030192] jit-backend-dump}
[16715a0307ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188990 +0  54020000
[16715a03149d] jit-backend-dump}
[16715a0325d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1889aa +0  59020000
[16715a033480] jit-backend-dump}
[16715a033eb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc1889ba +0  68020000
[16715a03485d] jit-backend-dump}
[16715a035fa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc187cb5 +0  F70B0000
[16715a036b1f] jit-backend-dump}
[16715a03bebc] jit-backend}
[16715a03dc80] {jit-log-opt-bridge
# bridge out of Guard 0x7fd4cc29c360 with 68 ops
[p0, p1, p2, p3]
+182: guard_class(p0, 9896040, descr=<Guard0x7fd4cc29a260>) [p0, p1, p2, p3]
+194: p6 = getarrayitem_gc_pure_r(p1, 0, descr=<ArrayP 8>)
+199: i7 = getfield_gc_i(p6, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+203: i8 = int_is_zero(i7)
+206: guard_false(i8, descr=<Guard0x7fd4cc29ca20>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1))))')
debug_merge_point(0, 0, '(zero? n)')
+212: p9 = getfield_gc_r(p2, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+216: p10 = getfield_gc_r(p9, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+220: p11 = getfield_gc_r(p10, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+224: p13 = getarrayitem_gc_pure_r(p11, 14, descr=<ArrayP 8>)
+231: guard_class(p13, 9896040, descr=<Guard0x7fd4cc29ca60>) [p0, p1, p2, p3]
+244: p16 = getarrayitem_gc_pure_r(p1, 1, descr=<ArrayP 8>)
+249: i17 = getfield_gc_i(p16, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+253: i18 = int_is_zero(i17)
+256: guard_false(i18, descr=<Guard0x7fd4cc29caa0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(ack (- m 1) (ack m (- n 1)))')
+262: p19 = getfield_gc_r(p2, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+266: p21 = getarrayitem_gc_pure_r(p19, 0, descr=<ArrayP 8>)
+270: guard_class(p21, ConstClass(Closure), descr=<Guard0x7fd4cc29cae0>) [p0, p1, p2, p3]
+283: p23 = getfield_gc_r(p21, descr=<FieldP prim.Closure.inst_lambda_ast 24 pure>)
+287: p24 = getfield_gc_r(p23, descr=<FieldP prim.LambdaAST.inst_top_env_s 32 pure>)
+291: p25 = getfield_gc_r(p21, descr=<FieldP prim.Closure.inst_env_s 8 pure>)
+302: guard_value(p24, ConstPtr(ptr26), descr=<Guard0x7fd4cc29cb20>) [p0, p1, p2, p3]
+318: guard_value(p25, ConstPtr(ptr27), descr=<Guard0x7fd4cc29cb60>) [p0, p1, p2, p3]
+327: p28 = getfield_gc_r(p21, descr=<FieldP prim.Closure.inst_env_v 16 pure>)
+331: i29 = instance_ptr_eq(p2, p28)
+334: guard_true(i29, descr=<Guard0x7fd4cc29cba0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(- m 1)')
+340: p31 = getarrayitem_gc_pure_r(p11, 9, descr=<ArrayP 8>)
+344: guard_class(p31, 9895600, descr=<Guard0x7fd4cc29cbe0>) [p0, p1, p2, p3]
+356: i34 = int_sub(i7, 1)
debug_merge_point(0, 0, '(ack m (- n 1))')
debug_merge_point(0, 0, '(- n 1)')
+360: i36 = int_sub(i17, 1)
+364: p37 = getfield_gc_r(p23, descr=<FieldP prim.LambdaAST.inst_body 24 pure>)
+368: i38 = getfield_gc_i(p37, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+373: guard_true(i38, descr=<Guard0x7fd4cc29cc20>) [p0, p1, p2, p3]
+389: guard_value(p37, ConstPtr(ptr39), descr=<Guard0x7fd4cc29cc60>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+398: p40 = new_with_vtable(descr=<SizeDescr 24>)
+471: p42 = new_array_clear(2, descr=<ArrayP 8>)
+490: setarrayitem_gc(p42, 0, p6, descr=<ArrayP 8>)
+494: p44 = new_with_vtable(descr=<SizeDescr 16>)
+505: setfield_gc(p44, i36, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+509: setarrayitem_gc(p42, 1, p44, descr=<ArrayP 8>)
+513: p46 = new_with_vtable(descr=<SizeDescr 32>)
+524: p47 = new_with_vtable(descr=<SizeDescr 48>)
+535: setfield_gc(p47, p21, descr=<FieldP prim.closure_k.inst_closure 8 pure>)
+546: setfield_gc(p47, ConstPtr(ptr48), descr=<FieldP prim.closure_k.inst_env_s 16 pure>)
+550: setfield_gc(p47, p3, descr=<FieldP prim.closure_k.inst_k 24 pure>)
+554: setfield_gc(p47, p2, descr=<FieldP prim.closure_k.inst_prev_env_v 32 pure>)
+558: setfield_gc(p47, 0, descr=<FieldU prim.closure_k.inst_plug_loop 40>)
+563: p51 = new_array_clear(2, descr=<ArrayP 8>)
+593: p52 = new_with_vtable(descr=<SizeDescr 16>)
+605: setfield_gc(p52, i34, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+609: setarrayitem_gc(p51, 0, p52, descr=<ArrayP 8>)
+614: p54 = new_with_vtable(descr=<SizeDescr 40>)
+625: setfield_gc(p40, p2, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+629: setfield_gc(p40, p42, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+633: setfield_gc(p46, 1, descr=<FieldS prim._prim_n_end.inst_current_index 8 pure>)
+641: setfield_gc(p46, p47, descr=<FieldP prim._prim_n_end.inst_k 16 pure>)
+645: setfield_gc(p46, p51, descr=<FieldP prim._prim_n_end.inst_value_array 24>)
+649: setfield_gc(p54, ConstPtr(ptr56), descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+653: setfield_gc(p54, p40, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+657: setfield_gc(p54, ConstPtr(ptr39), descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+661: setfield_gc(p54, p46, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+665: jump(p40, p46, p54, descr=TargetToken(140551935057952))
+704: --end of the loop--
[16715a0fbe5c] jit-log-opt-bridge}
[16715a4487b8] {jit-backend
[16715a55da0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188d
[16715a577968] jit-backend-dump}
[16715a57b33d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188e44 +0  1F000000
[16715a57c777] jit-backend-dump}
[16715a57cf06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188e4f +0  1F000000
[16715a57d8ab] jit-backend-dump}
[16715a57df80] {jit-backend-addr
bridge out of Guard 0x7fd4cc29c720 has address 0x7fd4cc188e40 to 0x7fd4cc189080
       gc table: 0x7fd4cc188d80
    jump target: 0x7fd4cc188e40
         resops: 0x7fd4cc188e6e
       failures: 0x7fd4cc189080
            end: 0x7fd4cc18928f
[16715a58176c] jit-backend-addr}
[16715a581ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188e7e +0  FE010000
[16715a5828a6] jit-backend-dump}
[16715a5837e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188e9b +0  00020000
[16715a5840f1] jit-backend-dump}
[16715a58462b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188ead +0  0D020000
[16715a584f7c] jit-backend-dump}
[16715a58564e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188ebd +0  1C020000
[16715a58628a] jit-backend-dump}
[16715a5aebf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188ecd +0  2B020000
[16715a5b1f46] jit-backend-dump}
[16715a5b2699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188ef1 +0  26020000
[16715a5b2f5d] jit-backend-dump}
[16715a5b35ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f06 +0  30020000
[16715a5b3f23] jit-backend-dump}
[16715a5b49fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f18 +0  3D020000
[16715a5b5657] jit-backend-dump}
[16715a5b5e0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f28 +0  4C020000
[16715a5b6b4e] jit-backend-dump}
[16715a5b7766] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f39 +0  5A020000
[16715a5b839f] jit-backend-dump}
[16715a5b9e90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f4e +0  64020000
[16715a5ba766] jit-backend-dump}
[16715a5bb129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f6a +0  67020000
[16715a5bbb55] jit-backend-dump}
[16715a5bc311] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f7a +0  76020000
[16715a5bcd16] jit-backend-dump}
[16715a5bd418] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f87 +0  88020000
[16715a5be138] jit-backend-dump}
[16715a5be807] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188f97 +0  97020000
[16715a5bf17c] jit-backend-dump}
[16715a5bf7d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188fad +0  A0020000
[16715a5c0178] jit-backend-dump}
[16715a5c08f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188fbd +0  AF020000
[16715a5c12a0] jit-backend-dump}
[16715a5c38bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd4cc188389 +0  B30A0000
[16715a5c464e] jit-backend-dump}
[16715a5c84c7] jit-backend}
[16715a5ca4b9] {jit-log-opt-bridge
# bridge out of Guard 0x7fd4cc29c720 with 68 ops
[p0]
+246: guard_class(p0, 9886296, descr=<Guard0x7fd4cc29a2c0>) [p0]
+258: p2 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+262: p3 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+266: p4 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+270: p5 = getfield_gc_r(p0, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+274: guard_class(p2, 9891992, descr=<Guard0x7fd4cc29cd20>) [p0]
+287: p7 = getfield_gc_r(p2, descr=<FieldP prim.IfAST.inst_ch 24 pure>)
+291: i8 = getfield_gc_i(p7, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+296: guard_false(i8, descr=<Guard0x7fd4cc29cd60>) [p0]
+312: guard_value(p7, ConstPtr(ptr9), descr=<Guard0x7fd4cc29cda0>) [p0]
+328: guard_value(p3, ConstPtr(ptr10), descr=<Guard0x7fd4cc29cde0>) [p0]
debug_merge_point(0, 0, '(zero? m)')
+337: p11 = getfield_gc_r(p4, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+341: p12 = getfield_gc_r(p11, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+345: p13 = getfield_gc_r(p12, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+349: p14 = getfield_gc_r(p13, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+353: p16 = getarrayitem_gc_pure_r(p14, 14, descr=<ArrayP 8>)
+360: guard_class(p16, 9896040, descr=<Guard0x7fd4cc29ce20>) [p0]
+373: p18 = getfield_gc_r(p4, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+377: p20 = getarrayitem_gc_pure_r(p18, 0, descr=<ArrayP 8>)
+381: i21 = getfield_gc_i(p20, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+385: i22 = int_is_zero(i21)
+388: guard_false(i22, descr=<Guard0x7fd4cc29ce60>) [p0]
+394: p23 = getfield_gc_r(p2, descr=<FieldP prim.IfAST.inst_el 32 pure>)
+398: i24 = getfield_gc_i(p23, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+403: guard_false(i24, descr=<Guard0x7fd4cc29cea0>) [p0]
+419: guard_value(p23, ConstPtr(ptr25), descr=<Guard0x7fd4cc29cee0>) [p0]
debug_merge_point(0, 0, '(if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1))))')
debug_merge_point(0, 0, '(zero? n)')
+428: p27 = getarrayitem_gc_pure_r(p18, 1, descr=<ArrayP 8>)
+432: i28 = getfield_gc_i(p27, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+436: i29 = int_is_zero(i28)
+439: guard_true(i29, descr=<Guard0x7fd4cc29cf20>) [p0]
debug_merge_point(0, 0, '(ack (- m 1) 1)')
+445: p30 = getfield_gc_r(p11, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+449: p32 = getarrayitem_gc_pure_r(p30, 0, descr=<ArrayP 8>)
+453: guard_class(p32, ConstClass(Closure), descr=<Guard0x7fd4cc29cf60>) [p0]
+466: p34 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_lambda_ast 24 pure>)
+470: p35 = getfield_gc_r(p34, descr=<FieldP prim.LambdaAST.inst_top_env_s 32 pure>)
+474: p36 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_env_s 8 pure>)
+485: guard_value(p35, ConstPtr(ptr37), descr=<Guard0x7fd4cc29cfa0>) [p0]
+501: guard_value(p36, ConstPtr(ptr38), descr=<Guard0x7fd4cc29cfe0>) [p0]
+510: p39 = getfield_gc_r(p32, descr=<FieldP prim.Closure.inst_env_v 16 pure>)
+514: i40 = instance_ptr_eq(p11, p39)
+517: guard_true(i40, descr=<Guard0x7fd4cc29d020>) [p0]
debug_merge_point(0, 0, '(- m 1)')
+523: p42 = getarrayitem_gc_pure_r(p14, 9, descr=<ArrayP 8>)
+527: guard_class(p42, 9895600, descr=<Guard0x7fd4cc29d060>) [p0]
+539: i45 = int_sub(i21, 1)
+543: p46 = getfield_gc_r(p34, descr=<FieldP prim.LambdaAST.inst_body 24 pure>)
+547: i47 = getfield_gc_i(p46, descr=<FieldU prim.AST.inst_should_enter 16 pure>)
+552: guard_true(i47, descr=<Guard0x7fd4cc29d0a0>) [p0]
+568: guard_value(p46, ConstPtr(ptr48), descr=<Guard0x7fd4cc29d0e0>) [p0]
debug_merge_point(0, 0, '(if (zero? m) (+ n 1) (if (zero? n) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1)))))')
+577: p49 = new_with_vtable(descr=<SizeDescr 24>)
+641: p51 = new_array_clear(2, descr=<ArrayP 8>)
+660: p52 = new_with_vtable(descr=<SizeDescr 16>)
+671: setfield_gc(p52, i45, descr=<FieldS prim.Number.inst_number_value 8 pure>)
+675: setarrayitem_gc(p51, 0, p52, descr=<ArrayP 8>)
+686: setarrayitem_gc(p51, 1, ConstPtr(ptr55), descr=<ArrayP 8>)
+690: p56 = new_with_vtable(descr=<SizeDescr 40>)
+701: setfield_gc(p56, ConstPtr(ptr48), descr=<FieldP prim.ExpState.inst_exp 24 pure>)
+705: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP prim.ExpState.inst_env_s 8 pure>)
+709: setfield_gc(p56, p49, descr=<FieldP prim.ExpState.inst_env_v 16 pure>)
+713: setfield_gc(p56, p5, descr=<FieldP prim.ExpState.inst_k 32 pure>)
+717: setfield_gc(p49, p11, descr=<FieldP env.EnvironmentValues.inst_prev 8 pure>)
+721: setfield_gc(p49, p51, descr=<FieldP env.EnvironmentValues.inst_values 16 pure>)
+725: jump(p49, p5, p56, descr=TargetToken(140551935057952))
+768: --end of the loop--
[16715a673bc3] jit-log-opt-bridge}
[16790c47ba70] {jit-summary
Tracing:      	4	0.004892
Backend:      	4	0.003594
TOTAL:      		13.822432
ops:             	1838
recorded ops:    	427
  calls:         	5
guards:          	72
opt ops:         	311
opt guards:      	68
opt guards shared:	61
forcings:        	22
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	6
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	1
Total # of bridges:	3
Freed # of loops:	0
Freed # of bridges:	0
[16790c497984] jit-summary}
[16790c499264] {jit-backend-counts
entry 1:617
TargetToken(140551935057952):94931297
TargetToken(140551935058032):94861949
bridge 140551935082848:94861909
bridge 140551935083360:68971
bridge 140551935084320:69164
[16790c49e7fc] jit-backend-counts}
